# Jesse and Cookies
import heapq
def cookies(k, A):
    # Write your code here
    minHeap = list(A)
    val1 = 0
    val2 = 0
    minHeap = A
    heapq.heapify(minHeap)
    count = 0
    while minHeap[0] < k:
            if len(minHeap) < 2:
                count = -1
                break
            val1 = heapq.heappop(minHeap)
            val2 = heapq.heappop(minHeap)
            val3 = val1 + (2*val2)
            print(val3)
            heapq.heappush(minHeap, val3)
            count=count + 1

    return count

#Find the Running Median
def runningMedian(a):
    # Write your code here
    def Median(maxHeap,minHeap):
        if len(maxHeap) == len(minHeap):
            return (-maxHeap[0] + minHeap[0])/2
        if len(maxHeap) > len(minHeap):
            return float(-maxHeap[0])
        else:
            return float(minHeap[0])
    maxHeap = []  
    minHeap = []  
    val = []
    for v in a:
        if not maxHeap or v < -maxHeap[0]:
            heapq.heappush(maxHeap,-v)
        else:
            heapq.heappush(minHeap,v)
        if len(maxHeap) - len(minHeap) >= 2:
            heapq.heappush(minHeap,-heapq.heappop(maxHeap))
        elif len(minHeap) - len(maxHeap) >= 2:
            heapq.heappush(maxHeap,-heapq.heappop(minHeap))
        val.append(round(Median(maxHeap, minHeap),1))
    return val
